name: Build ClassifiedCoreKit

on:
  push:
    branches: [ main ]
    paths:
      - 'ClassifiedCoreKit/**'
      - 'ClassifiedList.xcodeproj/**'
      - '.github/workflows/build-corekit.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'ClassifiedCoreKit/**'
      - 'ClassifiedList.xcodeproj/**'
      - '.github/workflows/build-corekit.yml'
  workflow_dispatch:

jobs:
  build:
    name: Build ClassifiedCoreKit Framework
    runs-on: macos-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Set up Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: 'latest-stable'
    
    - name: Find Build Configuration
      run: |
        xcodebuild -project ClassifiedList.xcodeproj -scheme ClassifiedCoreKit -showBuildSettings | grep "BUILT_PRODUCTS_DIR"

    - name: Build ClassifiedCoreKit Framework
      run: |
        xcodebuild clean build \
          -project ClassifiedList.xcodeproj \
          -scheme ClassifiedCoreKit \
          -destination "platform=macOS" \
          -configuration Release \
          CODE_SIGNING_ALLOWED=NO
    
    - name: Debug Build Location
      run: |
        find . -name "ClassifiedCoreKit.framework" -type d
        ls -la $(xcodebuild -project ClassifiedList.xcodeproj -scheme ClassifiedCoreKit -showBuildSettings | grep -m 1 "BUILT_PRODUCTS_DIR" | awk '{print $3}')

    - name: Get Build Directory
      id: build-dir
      run: |
        BUILD_DIR=$(xcodebuild -project ClassifiedList.xcodeproj -scheme ClassifiedCoreKit -showBuildSettings | grep -m 1 "BUILT_PRODUCTS_DIR" | awk '{print $3}')
        echo "BUILD_DIR=$BUILD_DIR" >> $GITHUB_ENV
        echo "Build directory is: $BUILD_DIR"

    - name: Verify Framework Structure
      run: |
        ls -la $BUILD_DIR/ClassifiedCoreKit.framework || echo "Framework not found at expected location"
    
    - name: Create Test Script
      run: |
        cat > test_framework.swift << EOF
        import Foundation
        import ClassifiedCoreKit
        
        // Basic test to verify the framework can be imported and classes can be instantiated
        let category = CoreCategory(id: 1, name: "Test Category")
        print("Created category: id=\(category.id), name=\(category.name)")
        
        // Try to create an endpoint
        if let url = URL(string: "https://example.com") {
            let endpoint = CoreEndpoint(url: url)
            print("Created endpoint with URL: \(endpoint.url)")
        }
        EOF
        
    - name: Run Basic Test
      run: |
        swift -F $BUILD_DIR test_framework.swift || echo "Unable to run test script with framework from $BUILD_DIR" 