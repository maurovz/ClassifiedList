name: Build ClassifiedCoreKit

on:
  push:
    branches: [ main ]
    paths:
      - 'ClassifiedCoreKit/**'
      - 'ClassifiedList.xcodeproj/**'
      - '.github/workflows/build-corekit.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'ClassifiedCoreKit/**'
      - 'ClassifiedList.xcodeproj/**'
      - '.github/workflows/build-corekit.yml'
  workflow_dispatch:

jobs:
  build:
    name: Build ClassifiedCoreKit Framework
    runs-on: macos-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Set up Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: 'latest-stable'
    
    - name: Debug Xcode and Project Info
      run: |
        xcodebuild -version
        xcodebuild -list -project ClassifiedList.xcodeproj
        
    - name: Build ClassifiedCoreKit Framework
      run: |
        xcodebuild clean build \
          -project ClassifiedList.xcodeproj \
          -scheme ClassifiedCoreKit \
          -destination "platform=macOS" \
          -configuration Release \
          CODE_SIGNING_ALLOWED=NO \
          SYMROOT=./build
    
    - name: Locate and Examine Framework
      run: |
        echo "Looking for framework in the build directory:"
        find ./build -name "ClassifiedCoreKit.framework" -type d
        
        FRAMEWORK_PATH=$(find ./build -name "ClassifiedCoreKit.framework" -type d | head -1)
        
        if [ -z "$FRAMEWORK_PATH" ]; then
          echo "Framework not found in build directory"
          exit 1
        fi
        
        echo "Found framework at: $FRAMEWORK_PATH"
        ls -la "$FRAMEWORK_PATH"
        
        echo "Framework binary info:"
        file "$FRAMEWORK_PATH/ClassifiedCoreKit"
        
        echo "Framework architectures:"
        lipo -info "$FRAMEWORK_PATH/ClassifiedCoreKit" || echo "Not a universal binary"
        
        echo "Framework symbols:"
        nm -gU "$FRAMEWORK_PATH/ClassifiedCoreKit" | grep ClassifiedCoreKit || echo "No public symbols found"
        
        echo "FRAMEWORK_PATH=$FRAMEWORK_PATH" >> $GITHUB_ENV
    
    - name: Verify Framework With Simple Command
      run: |
        if [ -d "$FRAMEWORK_PATH" ]; then
          echo "import ClassifiedCoreKit; print(\"Framework successfully imported\")" > simple_test.swift
          
          echo "Attempting to compile and run with Swift:"
          swiftc -F "$(dirname "$FRAMEWORK_PATH")" -framework ClassifiedCoreKit simple_test.swift -o simple_test || (echo "Compilation failed"; exit 1)
          ./simple_test
        else
          echo "Cannot verify framework - not found"
          exit 1
        fi 